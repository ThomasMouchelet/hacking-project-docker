{"version":3,"sources":["config.js","services/authAPI.js","contexts/AuthContext.js","services/usersAPI.js","pages/LoginPage.js","services/teamAPI.js","services/studentAPI.js","pages/CreateTeamPage.js","pages/FinalPage.js","firebasedb.js","pages/admin/FormTchat.js","pages/admin/ShowValidChallenges.js","services/challengesAPI.js","pages/admin/ShowChallenges.js","pages/admin/ValidetedTeamList.jsx","pages/admin/ValidatedTeamForm.jsx","pages/admin/AdminPage.js","pages/StudentList.js","components/PrivateRouter.js","components/AdminRoute.js","services/validChallengesAPI.js","components/ShowDescriptionChallenge.js","pages/ChallengePage.js","pages/VideoPage.js","cat-nyan-cat.gif","components/Nyancat.jsx","index.js"],"names":["API_URL","process","LOGIN_API","USER_API","CHALLENGE_API","VALID_CHALLENGE","TEAM_API","STUDENT_API","setAxiosToken","token","axios","defaults","headers","authenticate","credentials","console","log","post","then","response","data","window","localStorage","setItem","logout","removeItem","setup","getItem","jwtDecode","exp","Date","getTime","isAuthenticated","React","createContext","setIsAuthenticated","value","getUserID","id","findActiveChallenge","get","res","getType","studentID","getTeamID","teamID","getStudentID","getStudentTeamID","studentTeamID","isAdmin","roles","includes","getFirstName","firstName","getSecretKey","secretKey","LoginPage","history","useHistory","useState","username","password","setCredentials","useContext","AuthContext","setError","handleChange","currentTarget","name","handleSubmit","event","a","preventDefault","AuthAPI","usersAPI","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","replace","error","className","onSubmit","type","placeholder","onChange","findOne","findAllTeams","getName","updateTeam","teamid","team","parseInt","completedAt","put","getStudentSecretKey","getAll","CreateTeamPage","studentTeam","setStudentTeam","code1","code2","code3","userSecretKeyValue","setUserSecretKeyValue","isLoading","setIsLoading","winMode","setWinMode","useEffect","authAPI","userAPI","fetStudentTeam","totalUserSecretKeyValue","Object","keys","map","index","key","teamAPI","result","secretTeamCode","slice","winModView","onClick","dark","studentAPI","FinalPage","require","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebasedb","firestore","FormTchat","message","dateTime","String","now","collection","doc","set","ShowValidChallenges","validChallenges","validChallenge","challenge","orderChallenge","format","timeToComplete","findAllChallenges","ShowChallenges","reload","challengesList","setChallengesList","fetAllChallenges","challengesAPI","challenges","values","answer","cols","rows","description","ValidetedTeamList","teams","setTeams","ValidatedTeamForm","selected","setSelected","fetchAllTeams","e","action","AdminPage","listTeams","setListTeams","setReload","playing","controls","video","setVideo","nyancat","gameoptions","setGameoptions","fetchVideo","fetchGameoptions","TeamAPI","onSnapshot","handleControlVideo","dataset","newVideoControl","newGameoptions","setTimeout","students","student","lastName","StudentList","studentList","setStudentList","fetAll","user","PrivateRoute","path","component","to","createValidChallenge","challengeID","resp","ShowDescriptionChallenge","descriptionSTRING","setDescriptionSTRING","userType","namingGame","newDescription","toString","dangerouslySetInnerHTML","__html","ChallengePage","setChallenge","setAnswer","userAnswer","setUserAnswer","disabled","setDisabled","getActiveChallenge","toLowerCase","redirectPage","validChallengesAPI","inputAnswer","onPaste","clipboardData","getData","VideoPage","url","playerRef","useRef","setPlaying","setControls","ref","width","height","Nyancat","src","cat","alt","App","fetTchatMessage","snapshot","messages","forEach","length","Provider","exact","render","props","PrivateRouter","AdminRoute","newestOnTop","rtl","pauseOnFocusLoss","rootElement","document","getElementById","ReactDom"],"mappings":"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","file":"static/js/main.5a3883e0.chunk.js","sourcesContent":["export const API_URL = process.env.REACT_APP_API_URL;\n\nexport const LOGIN_API = `${API_URL}/login_check`;\nexport const USER_API = `${API_URL}/users`;\nexport const CHALLENGE_API = `${API_URL}/challenges`;\nexport const VALID_CHALLENGE = `${API_URL}/valid_challenges`;\nexport const TEAM_API = `${API_URL}/teams`;\nexport const STUDENT_API = `${API_URL}/students`;","import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { LOGIN_API } from \"../config\";\n\n/**\n * Déconnexion (suppression du token du localStorage et sur Axios)\n */\nfunction logout() {\n    window.localStorage.removeItem(\"authToken\");\n    delete axios.defaults.headers[\"Authorization\"];\n}\n\n/**\n * Requête HTTP d'authentification et stockage du token dans le storage et sur Axios\n * @param {object} credentials\n */\nfunction authenticate(credentials) {\n    console.log(\"LOGIN_API\",LOGIN_API )\n    return axios\n        .post(LOGIN_API, credentials)\n        .then((response) => response.data.token)\n        .then((token) => {\n            // Je stocke le token dans mon localStorage\n            window.localStorage.setItem(\"authToken\", token);\n            // On prévient Axios qu'on a maintenant un header par défaut sur toutes nos futures requetes HTTP\n            setAxiosToken(token);\n        });\n}\n\n/**\n * Positionne le token JWT sur Axios\n * @param {string} token Le token JWT\n */\nfunction setAxiosToken(token) {\n    axios.defaults.headers[\"Authorization\"] = \"Bearer \" + token;\n}\n\n/**\n * Mise en place lors du chargement de l'application\n */\nfunction setup() {\n    // 1. Voir si on a un token ?\n    const token = window.localStorage.getItem(\"authToken\");\n    // 2. Si le token est encore valide\n    if (token) {\n        const { exp: expiration } = jwtDecode(token);\n        if (expiration * 1000 > new Date().getTime()) {\n            setAxiosToken(token);\n        }\n    }\n}\n\n/**\n * Permet de savoir si on est authentifié ou pas\n * @returns boolean\n */\nfunction isAuthenticated() {\n    // 1. Voir si on a un token ?\n    const token = window.localStorage.getItem(\"authToken\");\n    // 2. Si le token est encore valide\n    if (token) {\n        const { exp: expiration } = jwtDecode(token);\n        if (expiration * 1000 > new Date().getTime()) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n}\n\nexport default {\n    authenticate,\n    logout,\n    setup,\n    isAuthenticated,\n};\n\n","import React from \"react\";\n\nexport default React.createContext({\n  isAuthenticated: false,\n  setIsAuthenticated: (value) => {},\n});","import { USER_API } from \"../config\";\nimport axios from \"axios\";\nimport jwtDecode from 'jwt-decode';\n\nfunction findActiveChallenge() {\n    const id = getUserID()\n    return axios\n        .get(`${USER_API}/${id}/challenge`)\n        .then(res => res.data)\n}\n\nfunction getUserID() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { id } = jwtDecode(token);\n        return id;\n    }\n}\n\nfunction getStudentID() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { studentID } = jwtDecode(token);\n        return studentID;\n    }\n}\nfunction getTeamID() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { teamID } = jwtDecode(token);\n        return teamID;\n    }\n}\n\nfunction getType() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { studentID } = jwtDecode(token);\n        const type = studentID ? \"student\" : \"team\"\n        return type;\n    }\n}\n\nfunction getStudentTeamID() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { studentTeamID } = jwtDecode(token);\n        return studentTeamID;\n    }\n}\n\nfunction getFirstName() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { firstName } = jwtDecode(token);\n        return firstName;\n    }\n}\n\nfunction getSecretKey() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { secretKey } = jwtDecode(token);\n        return secretKey;\n    }\n}\n\nfunction isAdmin() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { roles } = jwtDecode(token);\n        return roles.includes(\"ROLE_ADMIN\") ? true : false;\n    }\n}\n\nexport default {\n    findActiveChallenge,\n    getUserID,\n    getType,\n    getTeamID,\n    getStudentID,\n    getStudentTeamID,\n    isAdmin,\n    getFirstName,\n    getSecretKey\n};","import React, { useState, useContext } from \"react\";\nimport AuthAPI from \"../services/authAPI\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport usersAPI from \"../services/usersAPI\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginPage = () => {\n    const history = useHistory();\n    const [credentials, setCredentials] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const { setIsAuthenticated } = useContext(AuthContext);\n    const [error, setError] = useState(\"\");\n\n    const handleChange = ({ currentTarget }) => {\n        const { value, name } = currentTarget;\n        setCredentials({ ...credentials, [name]: value });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            await AuthAPI.authenticate(credentials);\n            setIsAuthenticated(true);\n\n            if (usersAPI.isAdmin()) {\n                toast(\"🦄 Bravo jeune hacker, valide ta team pour terminer.\", {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                history.replace(\"admin\");\n            } else {\n                toast(\"🦄 Que la force de la licorne soit avec toi !\", {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n                history.replace(\"challenge\");\n            }\n        } catch (error) {\n            console.log(error);\n            setError(\n                \"Identifiant ou mot de passe incorrect\"\n            );\n\n            toast.error(\"Identifiant ou mot de passe incorrect\");\n        }\n    };\n\n    return (\n        <div className=\"window login-page\">\n            <form onSubmit={handleSubmit} className=\"terminal\">\n                <input\n                    type=\"text\" placeholder=\"username\"\n                    onChange={handleChange}\n                    value={credentials.username}\n                    name=\"username\"\n                    placeholder=\"t.mouchelet\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    onChange={handleChange}\n                    name=\"password\"\n                />\n                <button type=\"submit\" className=\"btn btn-success\">\n                    connect\n                </button>\n            </form>\n            {/* {error && <p className=\"error\">{error}</p>} */}\n        </div>\n    )\n}\n\nexport default LoginPage;","import { TEAM_API } from \"../config\";\nimport axios from \"axios\";\nimport jwtDecode from 'jwt-decode';\n\nfunction findOne(id) {\n    return axios\n        .get(`${TEAM_API}/${id}`)\n        .then(res => res.data)\n}\n\nfunction findAllTeams() {\n    return axios\n        .get(`${TEAM_API}`)\n        .then(res => res.data[\"hydra:member\"])\n}\n\nfunction getName() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { name } = jwtDecode(token);\n        return name;\n    }\n}\n\nfunction updateTeam(teamid){\n    const team = {\n        id: parseInt(teamid),\n        completedAt: new Date()\n    }\n\n    return axios\n        .put(`${TEAM_API}/${team.id}`, team)\n        .then(res => res.data[\"hydra:member\"])\n}\n\nexport default {\n    findOne,\n    findAllTeams,\n    getName,\n    updateTeam\n};","import { STUDENT_API } from \"../config\";\nimport { TEAM_API } from \"../config\";\nimport axios from \"axios\";\nimport jwtDecode from 'jwt-decode';\n\nfunction getStudentTeamID() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { studentTeamID } = jwtDecode(token);\n        return studentTeamID;\n    }\n}\nfunction getStudentSecretKey() {\n    const token = window.localStorage.getItem(\"authToken\");\n    if (token) {\n        const { secretKey } = jwtDecode(token);\n        return secretKey;\n    }\n}\n\nfunction getAll() {\n    return axios\n        .get(`${STUDENT_API}`)\n        .then(res => res.data[\"hydra:member\"])\n}\n\nexport default {\n    getStudentTeamID,\n    getStudentSecretKey,\n    getAll\n};","import React, { useState, useContext, useEffect } from \"react\";\nimport teamAPI from \"../services/teamAPI\";\nimport userAPI from \"../services/usersAPI\";\nimport tudentAPI from \"../services/studentAPI\";\nimport studentAPI from \"../services/studentAPI\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport authAPI from \"../services/authAPI\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst CreateTeamPage = () => {\n    const [studentTeam, setStudentTeam] = useState(null)\n    const [userSecretKeyValue, setUserSecretKeyValue] = useState({\n        code1: \"\",\n        code2: \"\",\n        code3: \"\",\n    })\n    const [isLoading, setIsLoading] = useState(false)\n    const [winMode, setWinMode] = useState(false)\n    const { setIsAuthenticated } = useContext(AuthContext);\n\n    useEffect(() => {\n        authAPI.setup();\n        const studentTeamID = userAPI.getStudentTeamID()\n        fetStudentTeam(studentTeamID)\n        if (isLoading) {\n            let totalUserSecretKeyValue = \"\"\n            Object.keys(userSecretKeyValue).map((index, key) => {\n                totalUserSecretKeyValue += userSecretKeyValue[index]\n            })\n            if (totalUserSecretKeyValue === studentTeam.secretKey) {\n                setWinMode(true);\n            }\n        }\n    }, [userSecretKeyValue])\n\n    const fetStudentTeam = async (id) => {\n        try {\n            const result = await teamAPI.findOne(id);\n            setStudentTeam(result);\n            setIsLoading(true)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleChange = ({ currentTarget }) => {\n        const { value, name } = currentTarget;\n        setUserSecretKeyValue({ ...userSecretKeyValue, [name]: value });\n\n        if (isLoading) {\n            const secretTeamCode = {\n                code1: studentTeam.secretKey.slice(0, 3),\n                code2: studentTeam.secretKey.slice(3, 6),\n                code3: studentTeam.secretKey.slice(3, 6),\n            }\n\n            Object.keys(secretTeamCode).map((index, key) => {\n                if ((index == currentTarget.name) && (secretTeamCode[index] == currentTarget.value)) {\n                    currentTarget.className = \"valid\"\n                }\n                if ((index == currentTarget.name) && (secretTeamCode[index] != currentTarget.value)) {\n                    currentTarget.className = \"\"\n                }\n            })\n        }\n    };\n\n\n    const handleLogout = () => {\n\n        toast.dark(studentTeam.name, {\n            position: \"top-right\",\n            autoClose: 9000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n\n        toast.dark(\"123\", {\n            position: \"top-right\",\n            autoClose: 9000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n\n        authAPI.logout();\n        setIsAuthenticated(false);\n    }\n\n    const winModView = (\n        <div className=\"winMod\">\n            <button onClick={handleLogout}>Team connection</button>\n            <p>Password : <em>123</em></p>\n        </div>\n    )\n\n    return (\n        <div className=\"create-team\">\n            <h1>Create Team</h1>\n            <div>\n                Bienvenue à vous, votre petit nom d’équipe sera <em>{isLoading && studentTeam.name}</em>\n                <br />\n                Avant de commencer… il va falloir trouver qui seront vos collaborateurs.\n                <br />\n                Chacun des membres de votre équipe a simplement à entrer le code qui lui a été confié précédemment dans le champs qui lui est réservé.\n                <br />\n                Pour rappel votre code secret est le suivant : <em>{studentAPI.getStudentSecretKey()}</em>\n                <br />\n                L'identifiant de connexion de votre team : <em>{isLoading && studentTeam.name}</em>\n                <br />\n                Bon courage !\n                <br />\n            </div>\n\n            <form>\n                <input type=\"text\" onChange={handleChange} name=\"code1\" placeholder=\"code 1\" />\n                <input type=\"text\" onChange={handleChange} name=\"code2\" placeholder=\"code 2\" />\n                <input type=\"text\" onChange={handleChange} name=\"code3\" placeholder=\"code 3\" />\n            </form>\n            {winMode && winModView}\n        </div>\n    )\n}\n\nexport default CreateTeamPage;","import React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport authAPI from \"../services/authAPI\";\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst FinalPage = () => {\n    const { setIsAuthenticated } = useContext(AuthContext);\n\n    const handleLogout = () => {\n        toast.dark(\"mistert\", {\n            position: \"top-right\",\n            autoClose: 9000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n\n        toast.dark(\"azerty\", {\n            position: \"top-right\",\n            autoClose: 9000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n\n        authAPI.logout();\n        setIsAuthenticated(false);\n    }\n\n    return (\n        <div>\n            <h1>Accès admin</h1>\n            <br />\n            <p>Login : <em>mistert</em></p>\n            <p>Vous avez trouvez une des variables du mot de passe : <em>cox</em></p>\n            <p>Il vous manque 3 autres varibles liées à votre cible : </p>\n            <ul>\n                <li>Le jour de naissance </li>\n                <li>Le mois de naissance </li>\n                <li>L'année de naissance </li>\n            </ul>\n            <p>Une fois ces différentes informations rassemblées, vous devrez trouver la bonne combinaison.</p>\n            <br />\n            <button onClick={handleLogout}>Admin connection</button>\n        </div>\n    )\n}\n\nexport default FinalPage;","import firebase from \"firebase\";\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp({\n    apiKey: \"AIzaSyC2lJL4ixVJZ5W0o40VrbkqkdUcqGJ1ZKg\",\n    authDomain: \"tchat-esd.firebaseapp.com\",\n    databaseURL: \"https://tchat-esd.firebaseio.com\",\n    projectId: \"tchat-esd\",\n    storageBucket: \"tchat-esd.appspot.com\",\n    messagingSenderId: \"480169967880\",\n    appId: \"1:480169967880:web:23b546f97de24a1caa6cbd\"\n  });\n  \nconst firebasedb = firebase.firestore();\n\nexport default firebasedb","import React, { useState, useContext, useEffect } from \"react\";\nimport firebasedb from \"../../firebasedb\";\n\nconst FormTchat = () => {\n    const [credentials, setCredentials] = useState({\n        message: \"\"\n    })\n\n    const handleChange = ({ currentTarget }) => {\n        const { value, name } = currentTarget;\n        setCredentials({ ...credentials, [name]: value });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const dateTime = String(Date.now());\n        firebasedb.collection(\"tchat\").doc(dateTime).set({\n                message: credentials.message\n            });\n\n        setCredentials({ message: \"\" })\n    }\n\n    return (\n        <div>\n            <h2>Envoyer un message</h2>\n            <form onSubmit={handleSubmit} className=\"tchat-form\">\n                <textarea\n                    type=\"text\" placeholder=\"message\"\n                    onChange={handleChange}\n                    value={credentials.message}\n                    name=\"message\"\n                />\n                <button type=\"submit\">Envoyer</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default FormTchat;","import React, { useState, useContext, useEffect } from \"react\";\nimport Moment from 'react-moment';\n\nconst ShowValidChallenges = ({ validChallenges }) => {\n\n    return (\n        <div className=\"valid-challenges\">\n            {validChallenges.map((validChallenge, key) => {\n\n                return (\n                    <div className=\"valid-challenge\" key={key}>\n                        <span>{validChallenge.challenge.orderChallenge}</span>\n                        <span> - {validChallenge.challenge.name}</span>\n                        <span> -\n                            <Moment format=\"DD/MM/YYYY - HH:mm:ss\">{validChallenge.timeToComplete}</Moment>\n                        </span>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ShowValidChallenges;","import { CHALLENGE_API } from \"../config\";\nimport axios from \"axios\";\n\nfunction findOne(id) {\n    return axios\n        .get(`${CHALLENGE_API}/${id}`)\n        .then(res => res.data)\n}\n\nfunction findAllChallenges() {\n    return axios\n        .get(`${CHALLENGE_API}`)\n        .then(res => res.data[\"hydra:member\"])\n}\n\nexport default {\n    findOne,\n    findAllChallenges\n};","import React, { useState, useContext, useEffect } from \"react\";\nimport challengesAPI from \"../../services/challengesAPI\";\nimport AuthAPI from \"../../services/authAPI\";\n\nconst ShowChallenges = ({ reload }) => {\n    const [challengesList, setChallengesList] = useState()\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        AuthAPI.setup();\n        AuthAPI.isAuthenticated();\n        fetAllChallenges()\n    }, [reload])\n\n    const fetAllChallenges = async () => {\n        try {\n            const challenges = await challengesAPI.findAllChallenges()\n            setChallengesList(challenges)\n            setIsLoading(true)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"challengesDetails\">\n            {isLoading && Object.values(challengesList).map((challenge, key) => {\n                return (\n                    <div className=\"challengeDetails\" key={key}>\n                        <input type=\"text\" value={challenge.name} />\n                        <input type=\"text\" value={challenge.orderChallenge} />\n                        <input type=\"text\" value={challenge.answer} />\n                        <textarea cols=\"30\" rows=\"10\">\n                            {challenge.description}\n                        </textarea>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ShowChallenges;","import { useEffect, useState } from \"react\";\nimport teamAPI from \"../../services/teamAPI\";\nimport Moment from 'react-moment';\n\nconst ValidetedTeamList = ({teams,setTeams}) => {\n\n    return ( \n        <div>\n            <ul>\n                {teams.map(team => (\n                    <li key={team.id}>\n                        <strong>\n                            {team.name} : \n                        </strong>\n                        {team.completedAt ? (\n                            <span>\n                                <Moment format=\"DD/MM/YYYY - HH:mm:ss\">{team.completedAt}</Moment>\n                            </span>\n                        ) : (\n                            <span>\n                                --\n                            </span>\n                        )}\n                    </li>  \n                ))}\n            </ul>\n        </div>\n     );\n}\n \nexport default ValidetedTeamList;","import { useEffect, useState } from \"react\";\nimport teamAPI from \"../../services/teamAPI\";\nimport ValidetedTeamList from \"./ValidetedTeamList\";\n\nconst ValidatedTeamForm = () => {\n    const [teams, setTeams] = useState([])\n    const [selected,setSelected] = useState(null)\n\n    useEffect(() => {\n        fetchAllTeams()\n    },[])\n\n    const fetchAllTeams = async () => {\n        try {\n            const data = await teamAPI.findAllTeams()\n            setTeams(data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            await teamAPI.updateTeam(selected)\n            fetchAllTeams()\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleChange = ({currentTarget}) => { \n        setSelected(currentTarget.value)\n    }\n\n    return ( \n        <div >\n            <h2>Valider ma team</h2>\n            <form action=\"\" className=\"tchat-form\" onSubmit={handleSubmit}>\n                <select name=\"team\" onChange={handleChange}>\n                    <option>-- SELECT TEAM --</option>\n                    {teams.map(team => (\n                        <option value={team.id}>{team.name}</option>\n                    ))}\n                </select>\n                <button type=\"submit\">Valider</button>\n            </form>\n\n            <ValidetedTeamList \n                teams={teams}\n                setTeams={setTeams}\n            />\n        </div>\n     );\n}\n \nexport default ValidatedTeamForm;","import React, { useState, useContext, useEffect } from \"react\";\nimport TeamAPI from \"./../../services/teamAPI\";\nimport FormTchat from \"./FormTchat\";\nimport ShowValidChallenges from \"./ShowValidChallenges\";\nimport ShowChallenges from \"./ShowChallenges\";\nimport AuthAPI from \"../../services/authAPI\";\nimport firebasedb from \"../../firebasedb\";\nimport ValidatedTeamForm from \"./ValidatedTeamForm\";\n\nconst AdminPage = () => {\n    const [listTeams, setListTeams] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [reload, setReload] = useState(false)\n    // const db = firebase.firestore();\n    const [video, setVideo] = useState({\n        playing: false,\n        controls: false\n    })\n    const [gameoptions, setGameoptions] = useState({\n        nyancat: false\n    })\n\n    useEffect(() => {\n        AuthAPI.setup();\n        AuthAPI.isAuthenticated();\n        fetchAllTeams()\n        fetchVideo()\n        fetchGameoptions()\n    }, [reload])\n\n    const fetchAllTeams = async () => {\n        try {\n            const teams = await TeamAPI.findAllTeams();\n            setListTeams([...teams])\n            setIsLoading(true);\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleReload = () => {\n        setReload(true);\n        setTimeout(() => {\n            setReload(false);\n        }, 200);\n    }\n\n    const fetchVideo = async () => {\n        firebasedb.collection(\"video\").doc(\"mistert\")\n            .onSnapshot((doc) => {\n                const data = doc.data()\n                setVideo(data)\n            });       \n    }\n\n    const fetchGameoptions = async () => {\n        firebasedb.collection(\"game\").doc(\"options\")\n            .onSnapshot((doc) => {\n                const data = doc.data()\n                setGameoptions(data)\n            });       \n    }\n\n    const handleControlVideo = ({ currentTarget }) => {\n        const index = currentTarget.id\n        const action = currentTarget.dataset.action === \"true\"\n\n        const newVideoControl = {\n            ...video,\n            [index]: action\n        }\n\n        setVideo(newVideoControl)\n\n        firebasedb.collection(\"video\").doc(\"mistert\").set(newVideoControl);\n    }\n\n    const handleNyancat = ({ currentTarget }) => {\n        const newGameoptions = {\n            ...gameoptions,\n            nyancat:true\n        }\n        setGameoptions(newGameoptions)\n\n        firebasedb.collection(\"game\").doc(\"options\").set(newGameoptions);\n\n        setTimeout(() => {\n            firebasedb.collection(\"game\").doc(\"options\").set({\n                ...gameoptions,\n                nyancat:false\n            });\n        }, 4000);\n    }\n\n    return (\n        <div className=\"admin-page\">\n            <div className=\"header-admin\">\n                <h1>AdminPage </h1>\n                {video.playing ? (\n                    <button onClick={handleControlVideo} id=\"playing\" data-action=\"false\">Pause video</button>\n                ) : (\n                        <button onClick={handleControlVideo} id=\"playing\" data-action=\"true\">Play video</button>\n                    )}\n                {video.controls ? (\n                    <button onClick={handleControlVideo} id=\"controls\" data-action=\"false\">Controls OFF</button>\n                ) : (\n                        <button onClick={handleControlVideo} id=\"controls\" data-action=\"true\">Controls ON</button>\n                    )}\n                \n                <button onClick={handleNyancat} id=\"nyancat\" data-action=\"true\">SPAWN CAT</button>\n                \n                <button onClick={handleReload}>RELOAD DATA</button>\n            </div>\n\n            <div className=\"row\">                \n                <FormTchat />\n                <ValidatedTeamForm />\n            </div>\n\n            <div className=\"row\">\n                <div className=\"challenges-admin\">\n                    <h2>Challenges</h2>\n                    <ShowChallenges reload={reload} />\n                </div>\n\n                <div className=\"logs\">\n                    <h2>Logs</h2>\n                    {isLoading && listTeams.map((team, key) => {\n                        return (\n                            <div className=\"team\" key={key}>\n                                <h3>{team.name} <span> - SK : {team.secretKey}</span> </h3>\n\n                                <ShowValidChallenges validChallenges={team.validChallenges} />\n\n                                <div className=\"students\">\n                                    {Object.values(team.students).map((student, key) => {\n                                        return (\n                                            <div className=\"student\" key={key}>\n                                                <span>{student.firstName}</span>\n                                                <span> {student.lastName}</span>\n                                                <span> - SK : {student.secretKey}</span>\n\n                                                <ShowValidChallenges validChallenges={student.validChallenges} />\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPage;","import React, { useState, useContext, useEffect } from \"react\";\nimport studentAPI from \"../services/studentAPI\";\n\nconst StudentList = () => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [studentList, setStudentList] = useState(null)\n\n    useEffect(() => {\n        fetAll()\n    }, [isLoading])\n\n    const fetAll = async () => {\n        try {\n            const students = await studentAPI.getAll()\n            console.log(students)\n            setStudentList(students)\n            setIsLoading(true)\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"studentList\">\n            {isLoading && Object.values(studentList).map((student, key) => {\n                return (\n                    <div key={key}>\n                        {student.firstName} {student.lastName} : {student.user.username}\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n}\n\nexport default StudentList;","import React, { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport usersAPI from \"../services/usersAPI\";\n\nconst PrivateRoute = ({ path, component }) => {\n    const { isAuthenticated } = useContext(AuthContext);\n\n    return (isAuthenticated && !usersAPI.isAdmin()) ? (\n        <Route path={path} component={component} />\n    ) : (\n            <Redirect to=\"/\" />\n        );\n};\n\nexport default PrivateRoute;","import React, { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport AuthContext from \"../contexts/AuthContext\";\nimport usersAPI from \"../services/usersAPI\";\n\nconst PrivateRoute = ({ path, component }) => {\n    const { isAuthenticated } = useContext(AuthContext);\n\n    return (isAuthenticated && usersAPI.isAdmin()) ? (\n        <Route path={path} component={component} />\n    ) : (\n            <Redirect to=\"/\" />\n        );\n};\n\nexport default PrivateRoute;","import { VALID_CHALLENGE } from \"../config\";\nimport axios from \"axios\";\nimport usersAPI from \"./usersAPI\";\n\nfunction createValidChallenge(challengeID) {\n\n    const type = usersAPI.getType();\n\n    let credentials = {\n        challenge: `api/challenges/${challengeID}`,\n        timeToComplete: new Date(),\n    }\n\n    if (type === \"student\") {\n        credentials = {\n            ...credentials,\n            student: `api/students/${usersAPI.getStudentID()}`,\n        }\n    }\n    if (type === \"team\") {\n        credentials = {\n            ...credentials,\n            team: `api/teams/${usersAPI.getTeamID()}`,\n        }\n    }\n\n    return axios.post(`${VALID_CHALLENGE}`, credentials)\n        .then(resp => resp)\n}\n\nexport default {\n    createValidChallenge,\n};","import React, { useEffect, useState } from \"react\";\nimport usersAPI from \"../services/usersAPI\";\nimport teamAPI from \"../services/teamAPI\";\n\nconst ShowDescriptionChallenge = ({ description }) => {\n    const [descriptionSTRING, setDescriptionSTRING] = useState(\"\")\n\n    useEffect(() => {\n        const userType = usersAPI.getType();\n        const namingGame = userType === \"student\" ? usersAPI.getFirstName() : teamAPI.getName()\n        const secretKey = userType === \"student\" ? usersAPI.getSecretKey() : \"\"\n        const newDescription = description.toString()\n            .replace(/{namingGame}/g, namingGame)\n            .replace(/{secretKey}/g, secretKey)\n        setDescriptionSTRING(newDescription);\n    }, [description])\n\n    return (\n        <div className=\"description\">\n            <p dangerouslySetInnerHTML={{ __html: descriptionSTRING }}></p>\n        </div>\n    )\n\n};\n\nexport default ShowDescriptionChallenge;","import React, { useState, useContext, useEffect } from \"react\";\nimport usersAPI from \"../services/usersAPI\";\nimport challengesAPI from \"../services/challengesAPI\";\nimport validChallengesAPI from \"../services/validChallengesAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport teamAPI from \"../services/teamAPI\";\nimport AuthAPI from \"../services/authAPI\";\nimport ShowDescriptionChallenge from \"../components/ShowDescriptionChallenge\";\n\nconst ChallengePage = () => {\n    const history = useHistory();\n    const [challenge, setChallenge] = useState({\n        id: \"\",\n        name: \"\",\n        description: \"\",\n    });\n    const [answer, setAnswer] = useState(\"\");\n    const [userAnswer, setUserAnswer] = useState(\"\");\n    const [disabled, setDisabled] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        AuthAPI.setup();\n        getActiveChallenge();\n        if (isLoading) {\n            if (userAnswer.toLowerCase() === answer) {\n                setDisabled(false)\n            } else {\n                setDisabled(true)\n            }\n        }\n    }, [userAnswer])\n\n    const getActiveChallenge = async () => {\n        try {\n            const id = await usersAPI.findActiveChallenge()\n            \n            if (id === \"complete\") {\n                const userType = usersAPI.getType();\n                const redirectPage = userType === \"student\" ? \"create_team\" : \"final_page\"\n                history.replace(redirectPage);\n            } else {\n                const challenge = await challengesAPI.findOne(id);\n                setChallenge({\n                    id: challenge.id,\n                    name: challenge.name,\n                    description: challenge.description,\n                })\n                setAnswer(challenge.answer);\n                setIsLoading(true);\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if(answer === userAnswer){\n            try {\n                await validChallengesAPI.createValidChallenge(challenge.id);\n                setUserAnswer(\"\");\n                getActiveChallenge();\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    const handleChange = ({ currentTarget }) => {\n        const inputAnswer = currentTarget.value.toLowerCase()\n        setUserAnswer(inputAnswer);\n    };\n\n    const handlePast = (e) => {\n        setUserAnswer(e.clipboardData.getData('Text'));\n    }\n\n    return (\n        <div>\n            <h1>{isLoading && challenge.name}</h1>\n\n            {isLoading &&\n                <ShowDescriptionChallenge description={challenge.description} />\n            }\n\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"réponse\"\n                    name=\"answer\"\n                    onChange={handleChange}\n                    onPaste={handlePast}\n                    value={userAnswer}\n                />\n                <input type=\"submit\" value=\"valider\" disabled={disabled} />\n            </form>\n        </div>\n    )\n}\n\nexport default ChallengePage;","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport ReactPlayer from 'react-player';\nimport { Link } from \"react-router-dom\";\nimport firebasedb from \"../firebasedb\";\n// import { getFirestore, collection, getDocs } from 'firebase/firestore';\n\nconst VideoPage = () => {\n    // const [url, setUrl] = useState(`${window.location.origin}/assets/mistert.mp4`)\n    const [url, setUrl] = useState(`http://icri5960.odns.fr/hacking-project/assets/mistert.mp4`)\n    const playerRef = useRef()\n    const [playing, setPlaying] = useState(false)\n    const [controls, setControls] = useState(false)\n\n    useEffect(() => {\n        fetchVideo()\n    }, [playing,controls])\n\n    const fetchVideo = async () => {\n        firebasedb.collection(\"video\").doc(\"mistert\")\n            .onSnapshot((doc) => {\n                const data = doc.data()\n                setPlaying(data.playing)\n                setControls(data.controls)\n            });\n    }\n\n    return (\n        <div className=\"videoPage\">\n\n            <Link className=\"btn btn-success\" to=\"/login\">Login</Link>\n\n            <ReactPlayer\n                ref={playerRef}\n                className='react-player'\n                width='100%'\n                height='100%'\n                url={url}\n                playing={playing}\n                controls={controls}\n            />\n        </div>\n    )\n}\n\nexport default VideoPage;","export default __webpack_public_path__ + \"static/media/cat-nyan-cat.3172d2d4.gif\";","import { useEffect, useState } from \"react\";\nimport cat from \"../cat-nyan-cat.gif\"\nimport firebasedb from \"../firebasedb\";\nimport usersAPI from \"../services/usersAPI\";\n\n\nconst Nyancat = () => {\n    const [gameoptions, setGameoptions] = useState({\n        nyancat: false\n    })\n    const [isAdmin,setIsadmin] = useState(usersAPI.isAdmin())\n\n    useEffect(()=>{\n        fetchGameoptions()\n    },[])\n\n    const fetchGameoptions = async () => {\n        firebasedb.collection(\"game\").doc(\"options\")\n            .onSnapshot((doc) => {\n                const data = doc.data()\n                setGameoptions(data)\n            });       \n    }\n\n    return ( \n        <div className={isAdmin && 'admin'} >\n            {gameoptions.nyancat && (\n                <div className=\"nyan-cat show\">\n                    <img src={cat} alt=\"\" />\n                </div>\n            )}\n        </div>\n     );\n}\n \nexport default Nyancat;","import React, { useEffect, useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport CreateTeamPage from \"./pages/CreateTeamPage\";\nimport FinalPage from \"./pages/FinalPage\";\nimport AdminPage from \"./pages/admin/AdminPage\";\nimport StudentList from \"./pages/StudentList\";\nimport AuthAPI from \"./services/authAPI\";\nimport AuthContext from \"./contexts/AuthContext\";\nimport PrivateRouter from \"./components/PrivateRouter\";\nimport AdminRoute from \"./components/AdminRoute\";\nimport ChallengePage from \"./pages/ChallengePage\";\nimport { HashRouter, Switch, Route, withRouter, useHistory, Redirect, BrowserRouter } from \"react-router-dom\";\nimport usersAPI from \"./services/usersAPI\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport VideoPage from \"./pages/VideoPage\";\nimport \"./styles/app.scss\"\nimport \"./styles/terminal.scss\"\nimport firebasedb from \"./firebasedb\";\nimport Nyancat from \"./components/Nyancat\";\n\nconst App = () => {\n    const history = useHistory();\n    const [isAuthenticated, setIsAuthenticated] = useState(AuthAPI.isAuthenticated);\n\n    useEffect(() => {\n        AuthAPI.setup();\n        AuthAPI.isAuthenticated();\n        fetTchatMessage();\n    }, [isAuthenticated])\n\n    const fetTchatMessage = async () => {\n        firebasedb.collection(\"tchat\")\n            .onSnapshot((snapshot) => {\n                let messages = []\n                snapshot.forEach(doc => {\n                    const { message } = doc.data()\n                    messages = [...messages, message]\n                    \n                })\n                if (isAuthenticated) {\n                    toast.dark(messages[messages.length - 1], {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                }\n            }); \n    }\n\n    const handleLogout = () => {\n        AuthAPI.logout();\n        setIsAuthenticated(false);\n\n        toast.dark(\"Déjà fini ? 😲\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n        });\n        // history.replace(\"/login\");\n    };\n\n    const mainRoute = () => {\n        if (!isAuthenticated) {\n            return <Redirect to=\"/login\" />\n        } else if (isAuthenticated && usersAPI.isAdmin()) {\n            return <Redirect to=\"/admin\" />\n        } else if (isAuthenticated && !usersAPI.isAdmin()) {\n            return <Redirect to=\"/challenge\" />\n        }\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                isAuthenticated,\n                setIsAuthenticated,\n            }}\n        >\n            <HashRouter>\n                <div>\n                    {isAuthenticated && <button className=\"disconnect\" onClick={handleLogout}>Déconnexion</button>}\n                    <Switch>\n                        <Route exact path=\"/\">\n                            {mainRoute}\n                        </Route>\n                        <Route\n                            path=\"/student_list\"\n                            component={StudentList}\n                        />\n                        <Route\n                            path=\"/video\"\n                            component={VideoPage}\n                        />\n                        {!isAuthenticated &&\n                            <Route\n                                path=\"/login\"\n                                render={(props) => <LoginPage {...props} />}\n                            />\n                        }\n                        <PrivateRouter\n                            path=\"/challenge\"\n                            component={ChallengePage}\n                        />\n                        <PrivateRouter\n                            path=\"/create_team\"\n                            component={CreateTeamPage}\n                        />\n                        <PrivateRouter\n                            path=\"/final_page\"\n                            component={FinalPage}\n                        />\n                        <AdminRoute\n                            path=\"/admin\"\n                            component={AdminPage}\n                        />\n                    </Switch>\n                </div>\n            </HashRouter>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            {/* Same as */}\n            <Nyancat />\n            <ToastContainer />\n        </AuthContext.Provider>\n    )\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDom.render(<App />, rootElement);\n"],"sourceRoot":""}